// THIS FILE CANNOT BE PARSED WITH JSON - JUST FOR REFERENCE
{
    "number_of_living_rooms": 1,
    "living_rooms_plus?" : false,
    "number_of_bedrooms": 1,
    "bedrooms_plus?" : false,
    "number_of_bathrooms": 1,
    "bathrooms_plus?" : false,
    "exterior_walls": [
        // Input exterior walls as a list of pairs of coordinates [ [ xi_0, yi_0, xf_0, yf_0 ], [ xi_1, yi_1, xf_1, yf_1 ] , â€¦ ]. 
        // Ensure that exterior walls form a chain. Thus, xf_0 == xi_1 and xf_N == xi_0, and for y. 
        [0,0,0,1],
        [0,1,0,2],
        [0,2,1,2],
        [1,2,2,2],
        [2,2,2,1],
        [2,1,2,0],
        [2,0,0,0]
    ],
    "connections_corners": [
        // [
        //     src_room_type, 
        //     src_room_index, 
        //     dest_room_type, 
        //     dest_room_index, 
        //     connection_type,
        //     connection_feature(s)
        // ]
        // Room types: {0:"exterior_wall", 1:"living_room", 2:"kitchen", 3:"bedroom", 4:"bathroom", 5:"missing", 6:"closet", 7:"balcony", 8:"corridor", 9:"dining_room", 10:"laundry_room"}  
        // Connection types: {0: "exterior wall corners", 1:"room adjacencies"
        // Connection features: 
        //      0.0 {interior wall angle}
        //      1.0 {0: "wall with door", 1: "wall without door", 2: "no wall, no door"}
        //      1.1 (direction from src to dest is ...): [0, 1,  2, 3,  4, 5,  6, 7,  8] == 
        //                                               [E, NE, N, NW, W, SW, S, SE, undefined] 
 
        // Walls/Corners
        [0, 0, 0, 1, 0], 
        [0, 1, 0, 2, -90], 
        [0, 2, 0, 3, 0], 
        [0, 3, 0, 4, -90],
        [0, 4, 0, 5, 0],
        [0, 5, 0, 6, -90],
        [0, 6, 0, 0, -90]
    ],
        // Room Adjacencies (CURRENTLY from src to dest, but not repeated the other way around with reversed direction)
    "connections_rooms": [
        [1, 0, 0, 0, 0, 4],
        [1, 0, 0, 5, 1, 0],
        [1, 0, 0, 6, 1, 6],
        [1, 0, 3, 0, 0, 3],
        [1, 0, 4, 0, 0, 1],
        [3, 0, 0, 1, 1, 4],
        [3, 0, 0, 2, 1, 2],
        [3, 0, 4, 0, 1, 0],
        [4, 0, 0, 3, 1, 2],
        [4, 0, 0, 4, 1, 0]
    ]
}

/*
And so we then expect to ...
*/